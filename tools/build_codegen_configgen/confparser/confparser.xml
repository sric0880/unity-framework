<?xml version="1.0" encoding="UTF-8"?>
<project name="confparser" default="all">
  
  
  <property file="confparser.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="off"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.antlr-4.7.1-complete.classpath">
    <pathelement location="${basedir}/lib/antlr-4.7.1-complete.jar"/>
  </path>
  
  <path id="library.st-4.0.8.classpath">
    <pathelement location="${basedir}/lib/ST-4.0.8.jar"/>
  </path>
  <!-- Modules -->
  
  
  <!-- Module confparser -->
  
  <dirname property="module.confparser.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.confparser" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.confparser" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.confparser" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.confparser" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="confparser.output.dir" value="${module.confparser.basedir}/out/classes"/>
  <property name="confparser.jar.output.dir" value="${module.confparser.basedir}/out/jar"/>
  <property name="confparser.csharp.output.dir" value="${module.confparser.basedir}/out/csharp"/>
  <property name="jar.file" value="${confparser.jar.output.dir}/${ant.project.name}.jar"/>
  <property name="mainclass" value="Config2CSharp"/>
  
  <path id="confparser.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="confparser.module.production.classpath">
    <path refid="${module.jdk.classpath.confparser}"/>
    <path refid="library.st-4.0.8.classpath"/>
    <path refid="library.antlr-4.7.1-complete.classpath"/>
  </path>
  
  <path id="confparser.jar.classpath">
    <path refid="library.st-4.0.8.classpath"/>
    <path refid="library.antlr-4.7.1-complete.classpath"/>
  </path>

  <patternset id="excluded.from.module.confparser">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.confparser">
    <patternset refid="excluded.from.module.confparser"/>
  </patternset>
  
  <path id="confparser.module.sourcepath">
    <dirset dir="${module.confparser.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile" description="Compile module confparser; production classes">
    <mkdir dir="${confparser.output.dir}"/>
    <javac destdir="${confparser.output.dir}" includeantruntime="false" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.confparser}/javac">
      <compilerarg line="${compiler.args.confparser}"/>
      <bootclasspath refid="confparser.module.bootclasspath"/>
      <classpath refid="confparser.module.production.classpath"/>
      <src refid="confparser.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.confparser"/>
    </javac>
  </target>

  <target name="build" depends="compile">
    <mkdir dir="${confparser.jar.output.dir}"/>
    <jar destfile="${jar.file}" basedir="${confparser.output.dir}">
      <fileset dir="${confparser.output.dir}">
        <include name="**/*.class"/>
      </fileset>
      <zipgroupfileset dir="${basedir}/lib" includes="*.jar"/>
      <manifest>
        <attribute name="Main-Class" value="${mainclass}"/>
        <attribute name="Built-By" value="zqluo"/>
      </manifest>
      <fileset dir="${basedir}/src">
        <include name="CSharp.stg"/>
      </fileset>
    </jar>
  </target>

  <target name="test" depends="build">
    <mkdir dir="${confparser.csharp.output.dir}"/>
    <java jar="${jar.file}" fork="true">
      <arg value="${basedir}/test/client.conf" />
      <arg value="${confparser.csharp.output.dir}"/>
    </java>
  </target>

  <target name="clean" description="cleanup module">
    <delete dir="${confparser.output.dir}"/>
    <delete dir="${confparser.jar.output.dir}"/>
    <delete dir="${confparser.csharp.output.dir}"/>
  </target>

  <target name="all" depends="clean, test" description="build all"/>
</project>