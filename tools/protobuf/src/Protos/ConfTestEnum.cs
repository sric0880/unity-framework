// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/conf_test_enum.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UF.Config {

  /// <summary>Holder for reflection information generated from client/conf_test_enum.proto</summary>
  public static partial class ConfTestEnumReflection {

    #region Descriptor
    /// <summary>File descriptor for client/conf_test_enum.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfTestEnumReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtjbGllbnQvY29uZl90ZXN0X2VudW0ucHJvdG8SBmNsaWVudBoZY29tbW9u",
            "L2VudW1fbW9kdWxlcy5wcm90byJ+CgxDb25mVGVzdEVudW0SDwoHaW50ZWdl",
            "chgBIAEoBRIOCgZhcnJheXMYAiADKAUSJQoMbW9kdWxlc0VudW1zGAMgAygO",
            "Mg8uY29tbW9uLk1vZHVsZXMSJgoNbW9kdWVsc0VudW1zMhgEIAMoDjIPLmNv",
            "bW1vbi5Nb2R1bGVzQgyqAglVRi5Db25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::UF.Config.EnumModulesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UF.Config.ConfTestEnum), global::UF.Config.ConfTestEnum.Parser, new[]{ "Integer", "Arrays", "ModulesEnums", "ModuelsEnums2" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ConfTestEnum : pb::IMessage<ConfTestEnum> {
    private static readonly pb::MessageParser<ConfTestEnum> _parser = new pb::MessageParser<ConfTestEnum>(() => new ConfTestEnum());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfTestEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UF.Config.ConfTestEnumReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfTestEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfTestEnum(ConfTestEnum other) : this() {
      integer_ = other.integer_;
      arrays_ = other.arrays_.Clone();
      modulesEnums_ = other.modulesEnums_.Clone();
      moduelsEnums2_ = other.moduelsEnums2_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfTestEnum Clone() {
      return new ConfTestEnum(this);
    }

    /// <summary>Field number for the "integer" field.</summary>
    public const int IntegerFieldNumber = 1;
    private int integer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Integer {
      get { return integer_; }
      set {
        integer_ = value;
      }
    }

    /// <summary>Field number for the "arrays" field.</summary>
    public const int ArraysFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_arrays_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> arrays_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Arrays {
      get { return arrays_; }
    }

    /// <summary>Field number for the "modulesEnums" field.</summary>
    public const int ModulesEnumsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::UF.Config.Modules> _repeated_modulesEnums_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::UF.Config.Modules) x);
    private readonly pbc::RepeatedField<global::UF.Config.Modules> modulesEnums_ = new pbc::RepeatedField<global::UF.Config.Modules>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UF.Config.Modules> ModulesEnums {
      get { return modulesEnums_; }
    }

    /// <summary>Field number for the "moduelsEnums2" field.</summary>
    public const int ModuelsEnums2FieldNumber = 4;
    private static readonly pb::FieldCodec<global::UF.Config.Modules> _repeated_moduelsEnums2_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::UF.Config.Modules) x);
    private readonly pbc::RepeatedField<global::UF.Config.Modules> moduelsEnums2_ = new pbc::RepeatedField<global::UF.Config.Modules>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UF.Config.Modules> ModuelsEnums2 {
      get { return moduelsEnums2_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfTestEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfTestEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Integer != other.Integer) return false;
      if(!arrays_.Equals(other.arrays_)) return false;
      if(!modulesEnums_.Equals(other.modulesEnums_)) return false;
      if(!moduelsEnums2_.Equals(other.moduelsEnums2_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Integer != 0) hash ^= Integer.GetHashCode();
      hash ^= arrays_.GetHashCode();
      hash ^= modulesEnums_.GetHashCode();
      hash ^= moduelsEnums2_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Integer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Integer);
      }
      arrays_.WriteTo(output, _repeated_arrays_codec);
      modulesEnums_.WriteTo(output, _repeated_modulesEnums_codec);
      moduelsEnums2_.WriteTo(output, _repeated_moduelsEnums2_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Integer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Integer);
      }
      size += arrays_.CalculateSize(_repeated_arrays_codec);
      size += modulesEnums_.CalculateSize(_repeated_modulesEnums_codec);
      size += moduelsEnums2_.CalculateSize(_repeated_moduelsEnums2_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfTestEnum other) {
      if (other == null) {
        return;
      }
      if (other.Integer != 0) {
        Integer = other.Integer;
      }
      arrays_.Add(other.arrays_);
      modulesEnums_.Add(other.modulesEnums_);
      moduelsEnums2_.Add(other.moduelsEnums2_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Integer = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            arrays_.AddEntriesFrom(input, _repeated_arrays_codec);
            break;
          }
          case 26:
          case 24: {
            modulesEnums_.AddEntriesFrom(input, _repeated_modulesEnums_codec);
            break;
          }
          case 34:
          case 32: {
            moduelsEnums2_.AddEntriesFrom(input, _repeated_moduelsEnums2_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
