// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/conf_test_dict.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UF.Config {

  /// <summary>Holder for reflection information generated from client/conf_test_dict.proto</summary>
  public static partial class ConfTestDictReflection {

    #region Descriptor
    /// <summary>File descriptor for client/conf_test_dict.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfTestDictReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtjbGllbnQvY29uZl90ZXN0X2RpY3QucHJvdG8SBmNsaWVudCKbAQoMQ29u",
            "ZlRlc3REaWN0EgoKAmlkGAEgASgFEgwKBG5hbWUYAiABKAkSDAoEZGVzYxgD",
            "IAEoCRIPCgdoZXJvX2lkGAQgASgFEg4KBmlzTWFsZRgFIAEoCBISCgptb2Rl",
            "bF9tYWxlGAYgAygJEhQKDG1vZGVsX2ZlbWFsZRgHIAMoCRIYChBjYXJyZXJf",
            "aWNvbl9wYXRoGAggASgJQgyqAglVRi5Db25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UF.Config.ConfTestDict), global::UF.Config.ConfTestDict.Parser, new[]{ "Id", "Name", "Desc", "HeroId", "IsMale", "ModelMale", "ModelFemale", "CarrerIconPath" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ConfTestDict : pb::IMessage<ConfTestDict> {
    private static readonly pb::MessageParser<ConfTestDict> _parser = new pb::MessageParser<ConfTestDict>(() => new ConfTestDict());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfTestDict> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UF.Config.ConfTestDictReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfTestDict() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfTestDict(ConfTestDict other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      desc_ = other.desc_;
      heroId_ = other.heroId_;
      isMale_ = other.isMale_;
      modelMale_ = other.modelMale_.Clone();
      modelFemale_ = other.modelFemale_.Clone();
      carrerIconPath_ = other.carrerIconPath_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfTestDict Clone() {
      return new ConfTestDict(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hero_id" field.</summary>
    public const int HeroIdFieldNumber = 4;
    private int heroId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroId {
      get { return heroId_; }
      set {
        heroId_ = value;
      }
    }

    /// <summary>Field number for the "isMale" field.</summary>
    public const int IsMaleFieldNumber = 5;
    private bool isMale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMale {
      get { return isMale_; }
      set {
        isMale_ = value;
      }
    }

    /// <summary>Field number for the "model_male" field.</summary>
    public const int ModelMaleFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_modelMale_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> modelMale_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ModelMale {
      get { return modelMale_; }
    }

    /// <summary>Field number for the "model_female" field.</summary>
    public const int ModelFemaleFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_modelFemale_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> modelFemale_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ModelFemale {
      get { return modelFemale_; }
    }

    /// <summary>Field number for the "carrer_icon_path" field.</summary>
    public const int CarrerIconPathFieldNumber = 8;
    private string carrerIconPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrerIconPath {
      get { return carrerIconPath_; }
      set {
        carrerIconPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfTestDict);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfTestDict other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (HeroId != other.HeroId) return false;
      if (IsMale != other.IsMale) return false;
      if(!modelMale_.Equals(other.modelMale_)) return false;
      if(!modelFemale_.Equals(other.modelFemale_)) return false;
      if (CarrerIconPath != other.CarrerIconPath) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (HeroId != 0) hash ^= HeroId.GetHashCode();
      if (IsMale != false) hash ^= IsMale.GetHashCode();
      hash ^= modelMale_.GetHashCode();
      hash ^= modelFemale_.GetHashCode();
      if (CarrerIconPath.Length != 0) hash ^= CarrerIconPath.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (HeroId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HeroId);
      }
      if (IsMale != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsMale);
      }
      modelMale_.WriteTo(output, _repeated_modelMale_codec);
      modelFemale_.WriteTo(output, _repeated_modelFemale_codec);
      if (CarrerIconPath.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CarrerIconPath);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (HeroId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
      }
      if (IsMale != false) {
        size += 1 + 1;
      }
      size += modelMale_.CalculateSize(_repeated_modelMale_codec);
      size += modelFemale_.CalculateSize(_repeated_modelFemale_codec);
      if (CarrerIconPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrerIconPath);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfTestDict other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.HeroId != 0) {
        HeroId = other.HeroId;
      }
      if (other.IsMale != false) {
        IsMale = other.IsMale;
      }
      modelMale_.Add(other.modelMale_);
      modelFemale_.Add(other.modelFemale_);
      if (other.CarrerIconPath.Length != 0) {
        CarrerIconPath = other.CarrerIconPath;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            HeroId = input.ReadInt32();
            break;
          }
          case 40: {
            IsMale = input.ReadBool();
            break;
          }
          case 50: {
            modelMale_.AddEntriesFrom(input, _repeated_modelMale_codec);
            break;
          }
          case 58: {
            modelFemale_.AddEntriesFrom(input, _repeated_modelFemale_codec);
            break;
          }
          case 66: {
            CarrerIconPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
